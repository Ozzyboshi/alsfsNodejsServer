// recvFunct.js
// ========

var fs = require('fs');

module.exports = {
  listVolumesRecv: function (data,customdata) {
    console.log('Volumes: ' + data);
	var cont=0;
	var converted="";
	while ( data[cont]!=3 )
	{
		if (data[cont]) converted+=String.fromCharCode(data[cont]);
		cont++;
	}
	var arrayConverted = converted.split('\n');
	arrayConverted = arrayConverted.filter(function(entry) { return entry.trim() != ''; });
	customdata.end( JSON.stringify(arrayConverted ));
  },
  listContentRecv: function (data,customdata) {
    console.log('Content: ' + data);
	if (data[0]==49 && data[1]==0 && data[2]==3)
	{
		console.log("Sending file name "+customdata.path+"...");
		var cmd="";			
		for (var i=0;i<customdata.path.length;i++)
		{
			cmd+=customdata.path[i];
		}
		cmd+=String.fromCharCode(4);
			
		customdata.port.write(cmd,function () {
			console.log("File name sent to list content");
		});
			
	}
	else
	{

		var cont=0;
		var converted="";
		while ( data[cont]!=3 )
		{
			if (data[cont]) converted+=String.fromCharCode(data[cont]);
			cont++;
		}

		console.log(converted);
		var arrayConverted = converted.split('\n');
		arrayConverted = arrayConverted.filter(function(entry) { return entry.trim() != ''; });
		console.log(JSON.stringify(arrayConverted));
		customdata.res.end(JSON.stringify(arrayConverted) );
	}
  },
  statRecv: function (data,customdata) {
	console.log('Content: ' + data);
	if (data[0]==49 && data[1]==0 && data[2]==3)
	{
		console.log("Stat for resource "+customdata.path+"...");
		var cmd="";			
		for (var i=0;i<customdata.path.length;i++)
		{
			cmd+=customdata.path[i];
		}
		cmd+=String.fromCharCode(4);
			
		customdata.port.write(cmd,function () {
			console.log("File name sent to stat");
		});		
	}
	else
	{
		var cont=0;
		var converted="";
		
		while ( data[cont]!=3 )
		{
			if (data[cont]) converted+=String.fromCharCode(data[cont]);
			cont++;
		}
		var arrayConverted = converted.split('\n');
		var convertedObj={"st_size":arrayConverted[0],"blk_size":arrayConverted[1]};
		customdata.res.end( JSON.stringify(convertedObj) );
	}
  },
  storeRecv: function (data,customdata) {
	console.log('aaaa Richiesta: #' + data+"##");
	console.log(data.toString().charCodeAt(0));

	// Send filename
	if (data[0]==49 && data[1]==0 && data[2]==3)
	{
		console.log("Sending file name "+customdata.amigaFilename+"...");
		var cmd="";			
		for (var i=0;i<customdata.amigaFilename.length;i++)
		{
			cmd+=customdata.amigaFilename[i];
		}
		cmd+=String.fromCharCode(4);
			
		customdata.port.write(cmd,function () {
			console.log("File name sent to store");
		});
			
	}
	//Send filesize	
	else if (data[0]==50 && data[1]==0 && data[2]==3)
	{
		const stats = fs.statSync(customdata.pcFilename);
		const fileSizeInBytes = stats.size;
		console.log("Sending file size "+fileSizeInBytes+"...");
			
		cmd=fileSizeInBytes.toString()+String.fromCharCode(4);
		console.log("sto per mandare"+cmd);
			
		customdata.port.write(cmd,function () {
			console.log("File size sent");
		});
	}
	// Send binary data
	else if (data[0]==51 && data[1]==0 && data[2]==3)
	{
		if (customdata.dryRun=="1") 	res.end( "Dryrun" );
		else
		{		
			console.log("Sending binary data for "+customdata.pcFilename);
			customdata.port.write(fs.readFileSync(customdata.pcFilename),function () {
				console.log("Binary data sent");
				customdata.res.end( "OK" );
			});
		}
	 }
  }
};

var zemba = function () {
}